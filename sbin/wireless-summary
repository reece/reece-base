#!/usr/bin/perl

use strict;
use warnings;
use IO::Pipe;
use Data::Dumper;

my @scan_cmd = qw(sudo iwlist wlan0 scanning);
my $in = new IO::Pipe;
$in->reader( @scan_cmd )
  || die("@scan_cmd: ", $!, "\n");


my @cells;
my $cell_i;

while( <$in> ) {
  if ( m/^(wlan\d)\s+Scan completed :/ ) {
	next;
  }

  if ( m/\s+Cell (\d+) - Address: (\S+)/ ) {
	$cell_i = $1;
	$cells[$cell_i]{address} = $2;
	$cells[$cell_i]{quality} = 0;
	next;
  }

  if ( m/\s+ESSID:"([^\"]*)"/ ) {
	$cells[$cell_i]{essid} = $1;
	next;
  }

  if ( m/\(Channel (\d+)\)/ ) {
	$cells[$cell_i]{channel} = $1;
	next;
  }

  if ( m/\s+Quality:\s*(\S+)\// ) {
	$cells[$cell_i]{quality} = $1;
	next;
  }

  if ( m/\s+Encryption key:(\S+)/ ) {
	$cells[$cell_i]{encryption} = $1;
	next;
  }

  if ( m/\s+Last beacon: (\d+)ms/ ) {
	$cells[$cell_i]{last_beacon} = $1;
	next;
  }

}


shift @cells;								# [0] always undef
my %cells_by_essid;

foreach my $cell (@cells) {
  push( @{$cells_by_essid{$cell->{essid}}}, $cell );
}

my @essids = keys %cells_by_essid;

foreach my $essid (@essids) {
  @{$cells_by_essid{$essid}} = sort { $b->{quality} <=> $a->{quality}} @{$cells_by_essid{$essid}};
}

@essids = sort { $cells_by_essid{$b}[0]->{quality}
				   <=>
				 $cells_by_essid{$a}[0]->{quality} } @essids;


foreach my $essid (@essids) {
  my @e_cells = @{$cells_by_essid{$essid}};
  foreach my $ec (@e_cells) {
	printf("%-20s %3s %2d %15s %5s %4sms\n",
		   map {$_||''} @{$ec}{qw(essid encryption channel address quality)}, $ec->{last_beacon}||'?' )
  }
}


$in->close();




__END__
# Scraps...

sub beacon_cmp {
  my ($a,$b) = @_;
  beacon_grade( $cells_by_essid{$a}[0]->{last_beacon} )
	<=>
  beacon_grade( $cells_by_essid{$b}[0]->{last_beacon} )
}
sub beacon_grade {
  $_ < 100 ? 0 : $_ < 500 ? 1 : 2;
}

sub quality_cmp {
  my ($a,$b) = @_;
  $cells_by_essid{$a}[0]->{quality}
	cmp
  $cells_by_essid{$b}[0]->{quality};
}
