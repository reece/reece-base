#!/usr/bin/env python3
"""Given a list of pdfs from Venon, generate files to import into freshteam
"""

import csv
import datetime
import logging
import pathlib
import re
import sys
from zipfile import ZipFile

import coloredlogs


_logger = logging.getLogger(__name__)

fields = "First Name", "Last Name", "Email", "Source Name", "Source Category Name", "Resume Name"

fn_regexp = re.compile(r"Professional Profile\s+-\s+(?P<position>[^-]+)\s+-\s+(?P<name>.+)\.pdf")


now = datetime.datetime.utcnow().strftime("%FT%T")
dir_path = pathlib.Path("/tmp") / now
candidates_path = dir_path.parent / (dir_path.name + "-candidates.csv")
resumes_path = dir_path.parent / (dir_path.name + "-resumes.zip")


    
def extract_name_from_filename(p: pathlib.Path) -> tuple:
    m = fn_regexp.match(p.name)
    name = m.groupdict()["name"]
    names = (name.split()[0], name.split()[-1])
    return names


if __name__ == "__main__":
    coloredlogs.install(level="INFO")

    csv_out = csv.DictWriter(open(candidates_path, "wt"), fieldnames=fields)
    csv_out.writeheader()

    zip_out = ZipFile(resumes_path, mode="w")

    files = sys.argv[1:]
    for fn in files:
        p = pathlib.Path(fn)
        names = extract_name_from_filename(p)
        arcname = f"{names[0]} {names[1]}.pdf"
        slug = f"{names[0][:3]}{names[1][:3]}"
        d = {
            "First Name": names[0],
            "Last Name": names[1],
            "Email": f"joanna+{slug}@venon.systems",
            "Source Name": "Venon",
            "Source Category Name": "Agencies",
            "Resume Name": arcname,
        }
        csv_out.writerow(d)
        zip_out.write(p, arcname=arcname)
        _logger.info(f"Added {names[0]} {names[1]}")

    del csv_out
    zip_out.close()

    _logger.info(f"Wrote {candidates_path} and {resumes_path}")
