#!/usr/bin/env python3

__doc__ = """list all repos accessible for a given user"""

# Example:
# snafu$ bitbucket-list-repos -u reece -p 's3krit' -o reece
# +-----------------------+----------------------------------------------------+-------+------------+---------+---------------------------+
# |          name         |                        ssh                         | owner | is_private | is_fork |      utc_last_updated     |
# +-----------------------+----------------------------------------------------+-------+------------+---------+---------------------------+
# |         ad-hoc        |        ssh://hg@bitbucket.org/reece/ad-hoc         | reece |   False    |  False  | 2012-07-24 20:33:23+00:00 |
# |          aws          |          ssh://hg@bitbucket.org/reece/aws          | reece |   False    |  False  | 2012-06-26 00:52:53+00:00 |
# |     bio-hgvs-perl     |     ssh://hg@bitbucket.org/reece/bio-hgvs-perl     | reece |   False    |  False  | 2012-03-05 04:49:50+00:00 |
# |         blimps        |        ssh://hg@bitbucket.org/reece/blimps         | reece |   False    |  False  | 2012-07-27 03:36:54+00:00 |
# |          blog         |         ssh://hg@bitbucket.org/reece/blog          | reece |    True    |  False  | 2012-01-18 03:59:07+00:00 |
# |        docdepot       |       ssh://hg@bitbucket.org/reece/docdepot        | reece |   False    |  False  | 2012-06-26 06:03:15+00:00 |


import argparse
import itertools
import json
import prettytable
import requests
import sys

fields = ['name','ssh','owner','is_private','is_fork','utc_last_updated']


def parse_args(argv):
    ap = argparse.ArgumentParser(
        description = __doc__
        )
    ap.add_argument(
        '--user', '-u',
        required = True
        )
    ap.add_argument(
        '--password', '-p',
        required = True
        )
    ap.add_argument(
        '--owners', '-o',
        action = 'append',
        default = [],
        )
    opts = ap.parse_args(argv)
    return opts


if __name__ == '__main__':
    opts = parse_args(sys.argv[1:])
    
    repos = json.loads(requests.get(
        url='https://bitbucket.org/api/1.0/user/repositories',
        auth=(opts.user, opts.password),
        ).content.decode('utf-8'))
    
    # split owners elements on commas, and flatten to a set
    owners = set( itertools.chain.from_iterable( oe.split(',') for oe in opts.owners ) )
    
    pt = prettytable.PrettyTable(field_names=fields)
    for repo in repos:
        if repo['owner'] in owners:
            repo['url'] = 'https://bitbucket.org/{repo[owner]}/{repo[slug]}'.format(repo=repo)
            repo['ssh'] = 'ssh://hg@bitbucket.org/{repo[owner]}/{repo[slug]}'.format(repo=repo)
            pt.add_row([ repo[k] for k in fields ])
            
    print(pt)
