#!/usr/bin/env python3

import logging
import random
import os
import re
import subprocess
import sys

import coloredlogs
from tqdm import tqdm

_logger = logging.getLogger()


fdisk_info_re = re.compile(
    r", (?P<size>\d+) bytes, (?P<sectors>\d+) sectors.+Disk model:\s+(?P<serial>\S+).+Sector"
    r" size \(logical/physical\): (?P<lss>\d+) bytes / (?P<pss>\d+) bytes", re.DOTALL | re.MULTILINE)


def get_device_info(dev):
    p = subprocess.run(["fdisk", "-l", dev], capture_output=True)
    if p.returncode != 0:
        raise Exception(p.stderr)
    m = fdisk_info_re.search(p.stdout.decode())
    if not m:
        raise Exception(f"{dev}: Failed to parse fdisk output")
    d = m.groupdict()
    d["size"] = int(d["size"])
    d["sectors"] = int(d["sectors"])
    d["pss"] = int(d["pss"])
    d["lss"] = int(d["lss"])
    return d


# def wipe_random_pos()
# def wipe_modulo()
# def wipe_fs_meta()


if __name__ == "__main__":
    coloredlogs.install(level="INFO")
    
    dev = sys.argv[1]
    device_info = get_device_info(dev)
    print(f"{dev} {device_info}")

    fd = os.open(dev, os.O_RDWR)
    pos = os.lseek(fd, 0, os.SEEK_END)
    assert pos == device_info["size"]

    N = 10000
    n_bytes = 4 * 2**10         # 4KiB

    for i in tqdm(range(N)):
        p = random.randrange(device_info["size"])
        os.lseek(fd, p, os.SEEK_SET)
        os.write(fd, os.urandom(n_bytes))
