#!/usr/bin/env python3

"""
Extract a sequence by identifier from a fasta stream on STDIN. The identifier is
found on the defline immediately after the '>' character, up to the first
whitespace. Assumes only one matching sequence, and exits immediately after
displaying the match.  The sequence is re-wrapped at 100 chars for consistency
across sources.

Usage: fasta-xseq identifier

"""

import sys
import textwrap


def main():
    """Main function to extract a sequence from a FASTA stream."""
    if len(sys.argv) != 2:
        print(__doc__.strip(), file=sys.stderr)
        sys.exit(1)

    target_id = sys.argv[1]

    found = False
    sequence_parts = []

    for line in sys.stdin:
        if line.startswith('>'):
            if found:
                # We've finished reading the target sequence.
                break

            # Check if this is the defline we are looking for.
            # The identifier is from '>' to the first whitespace.
            try:
                header_id = line[1:].strip().split(maxsplit=1)[0]
            except IndexError:
                # Handle empty defline like ">" or "> ".
                continue

            if header_id == target_id:
                found = True
                # Print the defline for valid FASTA output.
                print(line.strip())
        elif found:
            sequence_parts.append(line.strip())

    if not found:
        print(f"Error: Identifier '{target_id}' not found.", file=sys.stderr)
        sys.exit(1)

    full_sequence = "".join(sequence_parts)

    # Re-wrap at 100 characters per line.
    for seq_line in textwrap.wrap(full_sequence, width=100):
        print(seq_line)


if __name__ == "__main__":
    main()

