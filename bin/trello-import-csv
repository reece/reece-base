#!/usr/bin/env python3
"""import csv file into Trello

You will need an app key and token from https://trello.com/app-key,
put in ~/.config/reece/trello.yaml, like this:

    api_key: 8402d1932dd074cdc0e2f32ff
    
    default:
      token: yourkeyhere

"""


import csv
import os
import sys

from trello import TrelloClient
import yaml


template1 = """*Device + Browser*
{osb}

*Page / Step in Flow*
{page}

*Steps to reproduce*
{steps}

*Expected Result*
{exp}

*Actual Result*
{act}
"""

template = """*Device + Browser*
{osb}

*Page / Step in Flow*
{page}

*Steps to reproduce*
{steps}

*Expected Result*
{exp}

*Actual Result*
{act}
"""



def first(i):
    return next(i, None)


def open_ss(fn):
    fh = open(fn)
    next(fh)                    # throw away first line
    return csv.DictReader(fh, delimiter="\t")



if __name__ == "__main__":
    account = "default"
    board_name = "Bugs"
    list_name = "Imported from SS"
    fn = sys.argv[-1]

    creds = yaml.load(open(os.path.expanduser("~/.config/reece/trello.yaml")),
                               Loader=yaml.SafeLoader)

    client = TrelloClient(api_key=creds["api_key"],
                          token=creds[account]["token"])

    bugs_board = first(b for b in client.list_boards() if b.name == board_name)

    imported_list = first(l for l in bugs_board.list_lists() if l.name == list_name)
    #if imported_list is None:
    #    imported_list = bugs_board.add_list(list_name)
    
    for rec in open_ss(fn):
        issue = rec.pop("Issue")
        
        if "\n" in issue:
            title, body = issue.split("\n", 1)
        else:
            title, body = issue, ""

        if rec["Filed by"]:
            body = "*Filed by:* " + rec["Filed by"] + "\n\n" + body

        if rec["Done?"] == "TRUE":
            title = "[DONE] " + title

        if rec["Notes"]:
            body += "\n" + rec["Notes"]

        card_data = {
            "name": title,
            "desc": body,
            }
            
        print(card_data)
        card = imported_list.add_card(**card_data)

        import IPython; IPython.embed()	  ### TODO: Remove IPython.embed()
