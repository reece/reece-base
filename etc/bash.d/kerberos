# kerberos -- setup kerberos -*-sh-*-

# The goal of this script is to ensure that KRB5CCNAME is always set to
# /tmp/kr5cc_<uid> while preserving any existing tickets and ensuring
# continuity of any processes which are using a preexisting KRB5CCNAME
# value.
#
# The rationale is that no matter how a ticket is obtained, if it's
# in one place then I don't have to repeatedly kinit.  For example, on
# some machines remote logins create a unique krb5 credential file;
# distinct logins to the same machine (concurrent or serial) get different
# files and therefore require separate kinits.  Phooey!


NEW_KRB5CC_FN=/tmp/krb5cc_`/usr/bin/id -u`

if [ -n "$KRB5CCNAME" ]; then
	KRB5CC_FN=`expr "$KRB5CCNAME" : 'FILE:\(.*\)'`

	if [ -z "$KRB5CC_FN" ]; then
		# not a FILE:-based credential cache
		unset KRB5CC_FN NEW_KRB5CC_FN
		return
	fi

	if [ "$KRB5CC_FN" = "$NEW_KRB5CC_FN" ]; then
		# already using $NEW_KRB5CC_FN
		unset KRB5CC_FN NEW_KRB5CC_FN
		return
	fi

	if [ -s "$KRB5CC_FN" ]; then
		# I prefer a symlink over copying because it
		# guarantees that processes started with the old KRB5CCNAME
		# still "see" tickets, including those obtained using the
		# new KRB5CCNAME
		/bin/ln -fns "$KRB5CC_FN" "$NEW_KRB5CC_FN"
	fi

fi


KRB5CCNAME="FILE:$NEW_KRB5CC_FN"
export KRB5CCNAME

unset KRB5CC_FN NEW_KRB5CC_FN
