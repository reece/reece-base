## csh-env -- reap environment variable from csh-logins -*-sh-*-


# sysadmin blunder #1: keeping variables in csh config files. Environment
# variables should be kept in sh scripts and inherited by all other
# spawned shells (incl. csh and friends).

# Alas, the world isn't that kind. I derive sh-formatted variables from
# /etc/cshrc.login and store them in a host-specific file. It gets updated
# automatically when cshrc.login changes. It's a shell Heimliche
# manoeuver, but it works.

case "$HOSTNAME" in
geneland*|ruby*|guanine*|cytosine*|met*|leu*|ala*|cys*|thymine*|trp*)
	CSHDIR="$HOME/.cshenv"
	CSHENV="$CSHDIR/$HOSTNAME"
	CSHVAR="$CSHDIR/variables"

	if [ \! -d "$CSHDIR" ]; then
		mkdir -p "$CSHDIR"
		touch "$CSHVAR"
	fi

	if [ \! -f "$CSHENV" -o "/etc/cshrc.login" -nt "$CSHENV" ]; then
		# cshenv doesn't exist or is older that cshrc.login => rebuild

		if [ -e "$CSHENV" ]; then
			/bin/mv -f "$CSHENV" "$CSHENV.bak"
		fi

		env - /bin/csh -c 'eval source /etc/csh.login; env' 2>/dev/null \
			| sort \
			| join -t= "$CSHVAR" - >"$CSHENV"

		warn REBUILT "$CSHENV" : `wc -l <$CSHENV` / `wc -l <"$CSHVAR"` variables
	fi

	# auto export (-a) everything defined in the file $CSHENV
	set -a
	source "$CSHENV"
	set +a

	unset CSHENV
	;;
esac
